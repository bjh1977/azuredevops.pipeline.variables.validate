trigger:
- main
- develop
- feature/*
pr:
  autoCancel: true
  branches:
    include:
    - main

variables:
  - template: azure-pipelines-vars.yml

name: $(BuildID)

pool:
  vmImage: 'windows-latest'

steps:
- task: validateVariablesTask@0
  inputs:
    warnOrError: 'Error'

- task: PowerShell@2
  displayName: 'Test'
  inputs:
    targetType: 'inline'
    script: Invoke-Pester -OutputFile pestertests.xml -OutputFormat NUnitXml
    pwsh: true
    workingDirectory: '$(build.artifactstagingdirectory)'

- task: PublishTestResults@2
  condition: always()
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: '**/pestertests.xml'       

- task: Npm@1
  inputs:
    command: 'install'

- task: TfxInstaller@3
  inputs:
    version: 'v0.9.x'

- task: PowerShell@2
  displayName: 'Build Test'
  inputs:
    filePath: 'build.ps1'
    arguments: '-Config Test -VersionMajor $(VersionMajor) -VersionMinor $(VersionMinor) -VersionPatch $(Build.BuildNumber) -Clean $True'
    pwsh: true

- task: CopyFiles@2
  displayName: 'Copy Test Files'
  inputs:
    SourceFolder: '$(agent.builddirectory)'
    Contents: '**\*.vsix'
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    flattenFolders: true

- task: PowerShell@2
  displayName: 'Build Prod'
  inputs:
    filePath: 'build.ps1'
    arguments: '-Config Prod -VersionMajor $(VersionMajor) -VersionMinor $(VersionMinor) -VersionPatch $(Build.BuildNumber) -Clean $False'
    pwsh: true

- task: CopyFiles@2
  displayName: 'Copy Prod Files'
  inputs:
    SourceFolder: '$(agent.builddirectory)'
    Contents: '**\*.vsix'
    TargetFolder: '$(build.artifactstagingdirectory)'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PowerShell@2
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  displayName: 'Publish to MarketPlace'
  inputs:
    targetType: 'inline'
    script: |
      $file = get-childitem bjh1977.validateVariablesTasks-*.vsix
      $filename = $file.name
      &tfx extension publish --vsix $filename --token $(Token) --auth-type pat
    pwsh: true
    workingDirectory: '$(build.artifactstagingdirectory)'